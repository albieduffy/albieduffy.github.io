{"version":3,"sources":["Components/About/About.js","Components/Blogs/Blogs.js","Actions/PortfolioActions.js","Components/LogIn/LogIn.js","Components/Post/Post.js","Components/Projects/Projects.js","Components/Private/Private.js","Components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","Reducers/PortfolioReducer.js","store.js","index.js"],"names":["About","className","data-icon","data-width","data-height","Blogs","renderBlogs","blogs","map","blog","index","key","title","post","created","slice","this","props","length","React","Component","connect","state","url","addBlogs","type","payload","addProjects","projects","fetchBlogs","dispatch","a","fetch","response","json","console","warn","message","LogIn","pass","handleInput","e","passlib","target","value","setState","handleSubmit","preventDefault","signIn","id","onSubmit","onChange","required","password","options","headers","method","body","JSON","stringify","token","localStorage","setItem","window","location","reload","Post","name","addBlog","placeholder","Authorization","getItem","Projects","renderProjects","project","src","image_url","alt","href","Private","component","PrivateRoute","rest","isLogin","render","to","App","loadBlogs","loadProjects","exact","path","Boolean","hostname","match","initState","PortfolioReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4b7ebe01.chunk.js","sourcesContent":["import React from 'react'\nimport './About.css'\n\nfunction About() {\n  return (\n    <div className='about'>\n      <div className='about-image'>\n      </div>\n      <div className='about-info'>\n        <div className='about-intro'>\n          <p>I am an Economics and Finance graduate from University of Bristol and a Software Engineer in Training at Futurepoof. In addition to Futureproof, I have played water polo for Great Britain and currently coach two highly successful teams at Imperial College London.</p>\n        </div>\n        <div className='about-skills'>\n          <h3>Skills</h3>\n          <div className='skill-icons'>\n            <i className=\"fab fa-html5 fa-5x\"></i>\n            <i className=\"fab fa-css3 fa-5x\"></i>\n            <i className=\"fab fa-js fa-5x\"></i>\n            <i className=\"fab fa-node-js fa-5x\"></i>\n            <i className=\"fab fa-react fa-5x\"></i>\n            <div className='icon-image'>\n            <iconify-icon data-icon=\"simple-icons:redux\" data-width=\"80\" data-height=\"80\"></iconify-icon>\n            </div>\n            <i className=\"fab fa-python fa-5x\"></i>\n            <div className='icon-image'>\n              <iconify-icon className='icon-image' data-icon=\"cib:flask\" data-width=\"80\" data-height=\"80\"></iconify-icon>\n            </div>\n            <div className='icon-image'>\n              <iconify-icon className='icon-image' data-icon=\"carbon:sql\" data-width=\"80\" data-height=\"80\"></iconify-icon>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './Blogs.css'\n\nclass Blogs extends React.Component {\n\n  renderBlogs = blogs => {\n    return blogs.map((blog, index) => {\n      return <div key={ index } className='blog-post'>\n          <h2>{blog.title}</h2>\n          <p>{blog.post}</p>\n          <h6>{blog.created.slice(0,16)}</h6>\n        </div>\n    })\n  }\n\n  render() {\n    return (\n      <div className='blogs'>\n        {this.props.blogs.length > 0 ? this.renderBlogs(this.props.blogs) : 'No posts to see!'}\n      </div>\n    )\n  }\n}\n\nconst mSTP = state => ({\n  blogs: state.blogs\n})\n\nexport default connect(mSTP)(Blogs);\n","const url = 'https://albieduffy-portfolio.herokuapp.com'\n\nconst addBlogs = (blogs) => ({\n  type: 'ADD_BLOG',\n  payload: blogs\n})\n\nconst addProjects = (projects) => ({\n  type: 'ADD_PROJECT',\n  payload: projects\n})\n\nexport const fetchBlogs = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`${url}/blogs`)\n      const blogs = await response.json()\n      dispatch(addBlogs(blogs))\n    } catch (err) {\n      console.warn(err.message)\n    }\n  }\n}\n\nexport const fetchProjects = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`${url}/projects`)\n      const projects = await response.json()\n      dispatch(addProjects(projects))\n    } catch (err) {\n      console.warn(err.message)\n    }\n  }\n}\n\nexport const logIn = (password) => {\n  return async dispatch => {\n    try {\n      const options = {\n        headers: {'Content-Type': 'application/json'},\n        method: 'POST',\n        body: JSON.stringify(password)\n      }\n      const response = await fetch(`${url}/login`, options)\n      const token = await response.json()\n      localStorage.setItem('user', token.token)\n      window.location.reload()\n    } catch (err) {\n      console.warn(err.message)\n    }\n  }\n}\n\nexport const postBlog = (post) => {\n  return async dispatch => {\n    try {\n      const options = {\n        headers : {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('user')}`\n        },\n        method: 'POST',\n        body: JSON.stringify(post)\n      }\n      // console.log(options['body'])\n      const response = await fetch (`${url}/post`, options)\n      const confirmation = await response.json()\n      confirmation && dispatch(fetchBlogs())\n      window.location = `/blog`\n    } catch (err) {\n      console.warn(err.message)\n    }\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logIn } from '../../Actions/PortfolioActions';\nimport './LogIn.css';\n\nclass LogIn extends React.Component {\n  state = {\n    pass: ''\n  }\n\n  handleInput = e => {\n    let pass = this.state.passlib\n    pass = e.target.value\n    this.setState({ pass })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.signIn(this.state.pass)\n  }\n\n  render() {\n    return (\n      <>\n      <div id='log-in'>\n        <form id='log-in-form' onSubmit={this.handleSubmit}>\n          <input type='password' onChange={this.handleInput} required /><br />\n          <input type='submit' value='ENTER' />\n        </form>\n      </div>\n      </>\n    )\n  }\n}\n\nconst mDTP = dispatch => ({\n  signIn: pass => dispatch(logIn(pass))\n})\n\nexport default connect(null, mDTP)(LogIn);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { postBlog } from '../../Actions/PortfolioActions'\nimport './Post.css'\n\nclass Post extends React.Component {\n  state = {\n    blog: {}\n  }\n\n  handleInput = e => {\n    let blog = this.state.blog\n    blog[e.target.name] = e.target.value\n    this.setState({ blog })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.addBlog(this.state.blog)\n  }\n\n  render() {\n    return (\n      <div id='blog-form'>\n        <form id='post-form' onSubmit={this.handleSubmit}>\n          <input type='text' placeholder='Title' name='title' onChange={this.handleInput} required /><br />\n          <textarea placeholder='Post' name='post' onChange={this.handleInput} required /><br />\n          <input type='submit' value='POST' />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mDTP = dispatch => ({\n  addBlog: blog => dispatch(postBlog(blog))\n})\n\nexport default connect(null, mDTP)(Post);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './Projects.css'\n\nclass Projects extends React.Component {\n\n  renderProjects = projects => {\n    return projects.map((project, index) => {\n      return <div key={index} className='project-card'>\n        <img src={project.image_url} alt={project.title}/>\n        <a href={project.url}><h3>{project.title}</h3></a>\n      </div>\n    })\n  }\n\n  render() {\n    return (\n      <div className='projects'>\n        {this.props.projects.length > 0 ? this.renderProjects(this.props.projects) : 'No projects to see!'}\n      </div>\n    )\n  }\n}\n\nconst mSTP = state => ({\n  projects: state.projects\n})\n\nexport default connect(mSTP)(Projects)\n","import React from 'react';\nimport { LogIn, Post, PrivateRoute } from '../index';\n\nclass Private extends React.Component {\n  render() {\n    return (\n      <>\n        {localStorage.getItem('user') ? <PrivateRoute component={Post} /> : <LogIn />}\n      </>\n    )\n  }\n}\n\nexport default Private;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const isLogin = localStorage.getItem('user')\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                isLogin ? <Component {...props} /> : <Redirect to=\"/private\" />\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport { About, Projects, Blogs, Private } from './Components/index.js'\nimport { fetchBlogs, fetchProjects } from './Actions/PortfolioActions'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.loadBlogs()\n    this.props.loadProjects()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className='nav-bar'>\n          <div className='page-links'>\n            <NavLink to='/'>About</NavLink>\n            <NavLink to='/projects'>Projects</NavLink>\n            <NavLink to='/blog'>Blog</NavLink>\n          </div>\n          <div className='social-links'>\n            <ul>\n              <li><a href=\"https://github.com/albieduffy\"><i className=\"fab fa-github fa-lg\"></i></a></li>\n              <li><a href=\"https://www.linkedin.com/in/albieduffy/\"><i className=\"fab fa-linkedin fa-lg\"></i></a></li>\n              <li><a href=\"https://www.instagram.com/albieduffy/\"><i className=\"fab fa-instagram fa-lg\"></i></a></li>\n              <li><NavLink to=\"/private\"><i className=\"fas fa-lock fa-lg\"></i></NavLink></li>\n            </ul>\n          </div>\n        </nav>\n        <div className='main'>\n          <Switch>\n            <Route exact path='/' component={About} />\n            <Route path='/projects' component={Projects} />\n            <Route path='/blog' component={Blogs} />\n            <Route path='/private' component={Private} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mDTP = dispatch => ({\n  loadBlogs: () => dispatch(fetchBlogs()),\n  loadProjects: () => dispatch(fetchProjects())\n})\n\nexport default connect(null, mDTP)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  projects: [],\n  blogs: []\n}\n\nconst PortfolioReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'ADD_PROJECT':\n      return {...state, projects: action.payload}\n    case 'ADD_BLOG':\n      return {...state, blogs: action.payload}\n    default:\n      return state\n  }\n}\n\nexport default PortfolioReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport PortfolioReducer from './Reducers/PortfolioReducer';\n\nconst store = createStore(PortfolioReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename='/'>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}